# Estrutura inicial do reposit√≥rio com suporte para revis√£o automatizada

import os

# 1. Cria diret√≥rio para os relat√≥rios
os.makedirs("reports", exist_ok=True)

# 2. Template de relat√≥rio para cada fun√ß√£o
for role in [
    "product_owner", "qa", "backend", "devops", "frontend", "security", "design"
]:
    with open(f"reports/{role}.md", "w") as f:
        content = (
            f"### ‚úÖ Fun√ß√£o:\n"
            f"{role.replace('_', ' ').title()}\n\n"
            "### üîç Descri√ß√£o do Problema:\n"
            "(Descreva claramente o problema identificado no c√≥digo ou comportamento do sistema)\n\n"
            "### üõ†Ô∏è Proposta de Corre√ß√£o:\n"
            "(Explique o que precisa ser feito para resolver o problema. Seja t√©cnico e objetivo.)\n\n"
            "### üìÇ Arquivo(s) Afetado(s):\n"
            "(Informe o caminho dos arquivos e, se poss√≠vel, as linhas afetadas)\n\n"
            "### ‚úÖ Prioridade:\n"
            "(Baixa | M√©dia | Alta | Cr√≠tica)\n"
        )
        f.write(content)

# 3. Script inicial para parsing dos relat√≥rios e aplica√ß√£o via IA
apply_script = (
    "import os\n"
    "import openai\n"
    "from github import Github\n\n"
    "# Configure com sua chave de API e token GitHub\n"
    "openai.api_key = os.getenv(\"OPENAI_API_KEY\")\n"
    "github = Github(os.getenv(\"GITHUB_TOKEN\"))\n\n"
    "repo_name = \"MauricioJSNeto/Arbitron\"\n"
    "repo = github.get_repo(repo_name)\n\n"
    "branch_name = \"ia-auto-review\"\n\n"
    "# Garante que o branch exista\n"
    "if branch_name not in [b.name for b in repo.get_branches()]:\n"
    "    source = repo.get_branch(\"main\")\n"
    "    repo.create_git_ref(ref=f\"refs/heads/{branch_name}\", sha=source.commit.sha)\n\n"
    "for file in os.listdir(\"reports\"):\n"
    "    with open(f\"reports/{file}\", \"r\") as report_file:\n"
    "        report = report_file.read()\n"
    "        print(f\"Processando: {file}\")\n\n"
    "        prompt = f\"\"\"\n"
    "Contexto: voc√™ est√° revisando o reposit√≥rio {repo_name}.\n"
    "Com base nesse relat√≥rio de revis√£o:\n\n"
    "{report}\n\n"
    "Gere um patch completo com as altera√ß√µes sugeridas.\n"
    "\"\"\"\n\n"
    "        # Chamada do modelo para sugerir ajuste\n"
    "        response = openai.ChatCompletion.create(\n"
    "            model=\"gpt-4\",\n"
    "            messages=[{\"role\": \"user\", \"content\": prompt}],\n"
    "            temperature=0.2\n"
    "        )\n\n"
    "        suggestion = response.choices[0].message.content\n"
    "        filename = file.replace(\".md\", \"_suggestion.txt\")\n"
    "        with open(f\"suggestions/{filename}\", \"w\") as s:\n"
    "            s.write(suggestion)\n\n"
    "        # Cria commit e PR se desejar\n"
    "        # Conte√∫do hipot√©tico -- ajuste conforme o patch proposto\n"
    "        # repo.create_file(path, message, content, branch=branch_name)\n"
    "        # repo.create_pull(title=..., body=..., head=branch_name, base=\"main\")\n"
)

os.makedirs("suggestions", exist_ok=True)

with open("apply_ai_fixes.py", "w") as f:
    f.write(apply_script)

# 4. Cria GitHub Actions para execu√ß√£o automatizada
github_action = (
    "name: IA Code Review\n\n"
    "on:\n"
    "  push:\n"
    "    paths:\n"
    "      - 'reports/**'\n"
    "  workflow_dispatch:\n\n"
    "jobs:\n"
    "  run-review:\n"
    "    runs-on: ubuntu-latest\n"
    "    steps:\n"
    "      - name: Checkout\n"
    "        uses: actions/checkout@v3\n\n"
    "      - name: Setup Python\n"
    "        uses: actions/setup-python@v4\n"
    "        with:\n"
    "          python-version: '3.10'\n\n"
    "      - name: Install dependencies\n"
    "        run: pip install openai PyGithub\n\n"
    "      - name: Run IA Review Script\n"
    "        env:\n"
    "          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}\n"
    "          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n"
    "        run: python apply_ai_fixes.py\n"
)

os.makedirs(".github/workflows", exist_ok=True)
with open(".github/workflows/ai_review.yml", "w") as f:
    f.write(github_action)
